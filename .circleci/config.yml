version: 2.1

orbs:
  tfsec: mycodeself/tfsec@1.1.0
  terraform: circleci/terraform@3.0.1
  node: circleci/node@5.0.1

jobs:
  # register-provider:
  #   machine:
  #     image: ubuntu-2004:202010-01
  #   steps:
  #     - checkout
  #     - run:
  #         name: Register provider in terraform cloud
  #         command: |
  #           echo "{
  #             \"data\": {
  #               \"attributes\": {
  #                 \"vcs-repo\": {
  #                   \"identifier\": \"$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME\",
  #                   \"oauth-token-id\": \"$TF_CLOUD_VCS_OAUTH_TOKEN_ID\",
  #                   \"display_identifier\":\"$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME\"
  #                 }
  #               },
  #               \"type\": \"registry-modules\"
  #             }
  #           }" > payload.json
  #           curl \
  #             --header "Authorization: Bearer $TF_CLOUD_TOKEN" \
  #             --header "Content-Type: application/vnd.api+json" \
  #             --request POST \
  #             --data @payload.json \
  #             --fail \
  #             https://app.terraform.io/api/v2/organizations/Lansweeper/registry-providers/vcs
  test:
    executor: terraform/default
    steps:
      - checkout
      - terraform/init:
          path: .
      - terraform/validate:
          path: .
      - terraform/fmt:
          path: .

  tfsec-scan:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - tfsec/install
      - tfsec/scan:
          directory: .

  lint:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run:
          name: Install tflint
          command: |
            curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | sh
      - run:
          name: Lint code
          command: tflint --init && tflint .

  release:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Release with semantic-release
          command: npx semantic-release

workflows:
  # workflow to run once only the first time to register the module in tfcloud
  # register:
  #   jobs:
  #     - should-register-provider?:
  #         type: approval
  #     - register-provider:
  #         requires:
  #           - should-register-provider?
  #         context:
  #           - lec-tfcloud
  main:
    jobs:
      - test
      - lint
      - tfsec-scan
      - release:
          requires:
            - lint
            - test
            - tfsec-scan
          context:
            - lec-github-release
          filters:
            branches:
              only: master